// 함수 선언문
// 자바스크립트에서 함수는 function 키워드로 만드는 함수와 => 기호로 만드는 화살표 함수 두 가지이다.

// 다음은 function 키워드로 만드는 함수 선언문의 구조이다.
// function 함수 이름(매개변수1, 매개변수2[, ...]) {
//   함수 몸통
// }

// 타입스크립트 함수 선언문은 자바스크립트 함수 선언문에서 매개변수와 함수 반환값(return type)에
// 타입 주석을 붙이는 다음 형태로 구성된다.
// function 함수 이름(매개변수1: 타입1, 매개변수2: 타입2[, ...]): 반환값 타입 {
//   함수 몸통
// }

// 다음 코드는 타입스크립트 함수 선언문의 예이다.
function add(a: number, b: number): number {
  return a + b;
}
let result = add(1, 2);
console.log(result); // 3

/* 매개변수와 인수, 인자
일반적으로 parameter는 '매개변수'라고 하고, argument는 '인수' 혹은 '인자'라고 한다. 매개변수는
함수 선언문에서 함수 이름 뒤 괄호 안에 선언하는 변수이고, 인수는 함수를 호출할 때 전달하는 값이다.
즉, 위의 코드에서 a와 b는 매개변수이고, add 함수를 호출할 때 전달한 1과 2는 인수이다.
*/

// 매개변수와 반환값의 타입 주석 생략
// 변수 때와 마찬가지로 함수 선언문에서도 매개변수와 반환값에 대한 타입 주석을 생략할 수 있다.
// 다만, 변수 때와는 달리 함수의 매개변수 타입과 반환 타입을 생략하는 것은 바람직하지 않다.
// 왜냐하면, 타입이 생략되어 있으면 함수의 구현 의도를 알기 어렵고 잘못 사용하기 쉽기 때문이다.

// void 타입
// 값을 반환하지 않는 함수는 반환 타입이 void이다. void 타입은 함수 반환 타입으로만 사용할 수 있다.
function printMe(name: string, age: number): void {
  console.log(`name: ${name}, age: ${age}`);
}
