// 6.6 함수 표현식과 익명 함수

/*
함수 표현식은 함수 이름을 생략할 수 있다는 점을 제외하면 함수 선언과 문법적으로 완전히 같습니다.
함수 표현식을 쓰고 그 결과를 변수에 할당하는 예제는 봅시다.
*/

// 이 예제는 결과적으로 함수 선언과 동등합니다.
const f = function() {
  // ...
};

/*
앞에서 함수 표현식에서는 함수 이름을 생략할 수 있다고 했습니다. 그러면 함수에 이름을 정하고 다시
변수에 할당하면 어떻게 될까요?
*/
const g = function f() {
  // ...
}

/*
위와 같이 함수를 만들면 이름 g에 우선순위가 있습니다. 그리고 함수 바깥에서 함수에 접근할 때는
g를 써야 하면, f로 접근하려 하면 변수가 정의되지 않았다는 에러가 생깁니다. 그렇다면 왜 이런 방법을
사용하는 걸까요? 함수 안에서 자신을 호출 할 때 (재귀 recursion라고 합니다.) 이런 방식이 필요할 수
있습니다.
*/
const g = function f(stop) {
  if (stop) console.log('f stopped');
  f(true);
};
g(false);
