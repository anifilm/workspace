// 슬라이스 사용하기 3
package main

import "fmt"

func main() {
    a := make([]int, 5, 10) // 길이가 5이고 용량이 10인 슬라이스 생성

    fmt.Println(len(a)) // 길이는 5
    fmt.Println(cap(a)) // 용량은 10
}

/*
실제로 슬라이스는 배열을 내장하고 있는데, 이 배열이 더 늘어났을 때 사용할 공간을 미리 할당할 수 있다.

make([]자료형, 길이, 용량)

var s = make([]int, 5, 10)  // 슬라이스 길이가 5이고 용량이 10인 슬라이스 생성

이렇게 생성하면 길이가 5이면 용량이 10인 슬라이스가 생성된다. 여기서 슬라이스 길이는 용량보다 크게 설정할 수 없다.
또한, 용량을 생략하면 용량은 길이와 동일하게 설정된다.

- 길이: 인덱스로 접근할 수 있는 공간 (슬라이스 내부 배열의 최대 길이), 용량이 더 확보되어 있더라도 길이 이상의
        인덱스에 접근하면 런타임 에러 발생
- 용량: 실제 메모리에 할당된 공간. 만약 슬라이스에 요소를 추가하여 용량이 가득차면 용량은 자동으로 늘어난다.

미리 슬라이스의 용량을 크게 할당하면 요소가 추가될 때마다 메모리를 새로 할당하지 않아도 되므로 성능상 이점이 있다.
하지만, 처음부터 메모리 공간을 많이 차지하게 된다. 반대로 슬라이스 용량을 적게 할당하면 메모리 공간은 적게 차지하지만,
요소가 추가될 때마다 메모리를 새로 할당하게 되므로 성능이 떨어질 수 있다.

슬라이스의 길이는 len 함수로 구할 수 있으며, 용량은 cap 함수로 구할 수 있다.
*/
