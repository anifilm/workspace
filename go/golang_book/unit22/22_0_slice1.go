// 슬라이스 사용하기 1
package main

import "fmt"

func main() {
    // var 슬라이스명 []자료형
    var a []int = make([]int, 5) // make 함수로 int형에 길이가 5인 슬라이에 공간 할당
    var b = make([]int, 5)       // 슬라이스를 선언할 때 자료형과 [] 생략
    c := make([]int, 5)          // 슬라이스를 선언할 때 var 키워드, 자료형과 [] 생략

    fmt.Println(a)
    fmt.Println(b)
    fmt.Println(c)
}

/*
슬라이스는 배열과 같지만, 길이가 고정되어 있지 않으며 동적으로 크기가 늘어난다. 또한, 배열과는 달리 레퍼런스 타입이다.

var a []int  // int형 슬라이스 선언

슬라이스는 배열과 달리 [ ] 대괄호 안에 길이를 지정하지 않는다. 이렇게 생성된 슬라이스의 길이는 0이다.
슬라이스는 make 함수를 사용하여 공간을 할당해야 값을 넣을 수 있다. 또한, 일반 변수와 마찬가지로 :=를 사용하여 var를
생략 할 수 있다.

make([]자료형, 길이)

슬아이스에 공간을 할당할 것이므로 make 함수의 첫 번째 매개변수에는 대괄호에 길이를 설정하지 않은 상태로 자료형을 지정한다.
그리고 두 번째 매개변수에는 슬라이스의 길이를 설정한다. 이렇게 슬라이스를 생성하고 공간을 할당하면 슬라이스의 요소는 모두
0으로 초기화 된다.
*/
