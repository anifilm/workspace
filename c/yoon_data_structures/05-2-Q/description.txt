문제 05-2 [더미 노드 기반의 양방향 연결 리스트의 구현]
필자는 연결 리스트를 처음부터 끝까지 구현할 수 있는 능력을 강조하지 않았다. 그럼에도 불구하고 이번에는
여러분에게 양방향 연결 리스트의 완전한 구현을 요구하고자 한다. 이유는 간단하다. 앞서 함께 구현한 양방향
연결 리스트를 모델로 하여 조금만 수정하고 주금만 보태면 완성할 수 있기 때문이다. 필자가 요구하는 양방향
연결 리스트의 구현 모델은 다음과 같다.
  (그림 05-25: 양쪽으로 더미 노드가 존재하는 양방향 연결 리스트 생략...)

위 그림에서 보이는 연결 리스트의 특징은 다음과 같다.

 - 양방향 연결 리스트이다.
 - 더미 노드가 리스트의 앞과 뒤에 각각 존재한다.
 - 포인터 변수 head와 tail이 있어서 리스트의 앞과 뒤를 각각 가리킨다.

더미 노드의 이점은 여러분이 알고있는 바와 같다. 그런데 이 경우에는 꼬리에도 더미 노드가 존재함에 유의하자.
그리고 구현범위를 제한한다는 의미에서 헤더파일의 일부를 제공하겠다. 즉 아래에서 보이는 구조체와 함수를 기반
으로 양방향 연결 리스트를 구현하면 된다.
  (헤더 파일 일부 생략...)

앞서 구현한 양방향 연결 리스트에서는 새 노드를 머리에 추가하였다. 따라서 이번에는 새 노드를 꼬리에 추가하는
방식으로 LInsert 함수를 구현하기로 하겠다. 그리고 LRemove 함수의 선언이 추가되었는데, 이 함수의 기능은 앞서
수차례 경험하였으니 별도의 설명이 필요치 않을 것이다.
그리고 프로그램을 완성한 다음에는 머리에 있는 더미 노드와 꼬리에 있는 더미 노드에 각각 어떠한 의미가 있는지
생각해보기 바란다. 필자는 구현 과정에서 여러분 스스로 그 의미를 알게 되리라 믿는다.
